include ':array_lib'
include ':app', ':string_struct', ':sort_algorithm', ':list_struct', ':TreeLib'

def currentTimeMillis = System.currentTimeMillis()

def beginProjectConfigTime

def startConfig = false

def projectConfig = new HashMap()

gradle.projectsLoaded {
    println "初始化耗时："+(System.currentTimeMillis()-currentTimeMillis)+" ms"
}

//单个项目配置之前
gradle.beforeProject {project->
    if(!startConfig){
        startConfig= true
        beginProjectConfigTime = System.currentTimeMillis()
    }

    projectConfig.put(project,System.currentTimeMillis())
}

//单个项目配置之后
gradle.afterProject {project->

    def currProjectTime = projectConfig.get(project)
    println "配置阶段 "+project+" 耗时："+(System.currentTimeMillis()-currProjectTime)+" ms"
}

gradle.projectsEvaluated {
    //println "配置阶段总耗时："+(System.currentTimeMillis()-beginProjectConfigTime)+" ms"

}
gradle.taskGraph.whenReady {

    println "配置阶段总耗时："+(System.currentTimeMillis()-beginProjectConfigTime)+" ms"
}

//Task执行开始前
gradle.taskGraph.beforeTask {
    println "Task执行开始前"
}
//Task执行开始后
gradle.taskGraph.afterTask {
    println "Task执行开始后"
}

//
gradle.buildFinished {

}

//gradle.addBuildListener(new BuildListener() {
//    @Override
//    void buildStarted(Gradle gradle) {
//        println "构建开始"
//    }
//
//    @Override
//    void settingsEvaluated(Settings settings) {
//
//        println "setting 评估完成 （settin.gradle中代码执行完毕）"
//    }
//
//    @Override
//    void projectsLoaded(Gradle gradle) {
//
//        println "项目结构加载完成  （初始化阶段结束）"
//        println "初始化结束，可访问项目根目录："+gradle.gradle.rootProject
//    }
//
//    @Override
//    void projectsEvaluated(Gradle gradle) {
//        println "所有项目评估完成 （配置阶段结束）"
//    }
//
//    @Override
//    void buildFinished(BuildResult result) {
//        println "构建结束"
//    }
//})